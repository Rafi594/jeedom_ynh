#!/bin/bash

# causes the shell to exit if any subcommand or pipeline returns a non-zero status
set -e

app=jeedom
version='2.3.12'

# Source app helpers
	source /usr/share/yunohost/helpers

# Retrieve arguments
	domain=$(ynh_app_setting_get "$app" domain)
	path=$(ynh_app_setting_get "$app" path)
	admin=$(ynh_app_setting_get "$app" admin)
	dbname=${app}
	dbuser=${app}
	dbpass=$(ynh_app_setting_get "$app" mysqlpwd)

# Remove trailing "/" for next commands
	path=${path%/}
	
# Copy of sources files
	final_path=/var/www/${app}
	sudo mkdir -p $final_path
	sudo wget -qq https://github.com/jeedom/core/archive/$version.zip
	sudo unzip -qq core-$version.zip
	sudo cp -a core-$version/. $final_path

# Configure Jeedom database and initialize app
	sudo cp $final_path/core/config/common.config.sample.php $final_path/core/config/common.config.php
	sudo sed -i -e "s/#HOST#/localhost/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#PORT#/3306/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#DBNAME#/${dbuser}/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#USERNAME#/${dbuser}/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#PASSWORD#/${dbpass}/g" $final_path/core/config/common.config.php

# Set permissions to app files
	sudo chmod 775 -R $final_path
	sudo chown -R www-data:www-data $final_path

# Install Jeedom	
	sudo php $final_path/install/install.php mode=force
	
# Nginx
	sudo sed -i "s@PATHTOCHANGE@$path@g"  ../conf/nginx.conf
	sudo sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/${domain}.d/${app}.conf

# Cron
	echo "* * * * * su --shell=/bin/bash - www-data -c '/usr/bin/php $final_path/core/php/jeeCron.php' >/dev/null 2>&1" | cronjeedom
	sudo mv cronjeedom /etc/cron.d/${app}
	sudo chown root /etc/cron.d/${app}
	
# Access to API without SSO
	ynh_app_setting_set "$app" unprotected_uris "/core/api/jeeApi.php"
	
# Configure LDAP and the Admin User
	mysql -u $dbuser -p $dbpass $dbuser < ../conf/ldap_config.sql
	mysql -u $dbuser -p $dbpass $dbuser -e "INSERT INTO user (id, login, password, options, hash, rights) VALUES ('0', '$admin', '', NULL, NULL, '{\"admin\":1}');"

# Restart services
	sudo service php5-fpm restart || true
	sudo service nginx reload || true

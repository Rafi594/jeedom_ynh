#!/bin/bash

# causes the shell to exit if any subcommand or pipeline returns a non-zero status
set -e

app=jeedom
version='3.0.0'

# Source app helpers
	source /usr/share/yunohost/helpers

# Retrieve arguments
	domain=$1
	path=${2%/}
	admin=$3
	sudo=$4
	zwave=$5

#Â Save app settings
	ynh_app_setting_set "${app}" admin "$admin"
	ynh_app_setting_set "${app}" zwave "$zwave"
	ynh_app_setting_set "${app}" sudo "$sudo"

# Check domain/path availability
	sudo yunohost app checkurl $domain$path -a ${app} \
	|| (echo "Path not available: $domain$path" && exit 1)

# Packages needed
	#sudo apt-get install -y -qq ntp usb-modeswitch python-serial

# Copy of sources files
	final_path=/var/www/${app}
	sudo mkdir -p $final_path
	sudo wget -qq https://github.com/jeedom/core/archive/$version.zip
	sudo unzip -qq $version.zip
	sudo cp -a core-$version/. $final_path

# For nginx user to be able to communicate with home automation devices
	if [ $(getent group dialout) ]; then
		sudo adduser www-data dialout
	fi
	if [ $(getent group gpio) ]; then
		sudo adduser www-data gpio
	fi

# MySQL
	dbname=${app}
	dbuser=${app}
	dbpass=$(ynh_string_random)
	
	# Initialize database
	ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
	
	# Save settings
	ynh_app_setting_set "${app}" mysqlpwd "$dbpass"

# Configure Jeedom database and initialize app
	sudo cp $final_path/core/config/common.config.sample.php $final_path/core/config/common.config.php
	sudo sed -i -e "s/#HOST#/localhost/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#PORT#/3306/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#DBNAME#/${dbuser}/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#USERNAME#/${dbuser}/g" $final_path/core/config/common.config.php
	sudo sed -i -e "s/#PASSWORD#/${dbpass}/g" $final_path/core/config/common.config.php

# Set permissions to app files
	sudo chmod 775 -R $final_path
	sudo chown -R www-data:www-data $final_path
	
# Sudo permissions to www-data if agreed to
	if [ "$sudo" = "Yes" ]; then
		if [ $(sudo grep "www-data ALL=(ALL) NOPASSWD: ALL" /etc/sudoers | wc -l) -eq 0 ];then
			sudo bash -c 'echo "www-data ALL=(ALL) NOPASSWD: ALL" | (EDITOR="tee -a" visudo)'
		fi
	fi

# Install Jeedom	
	sudo php $final_path/install/install.php mode=force

# Nginx
	sudo sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
	sudo sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/${domain}.d/${app}.conf

# Cron
	echo "* * * * * www-data /usr/bin/php -f $final_path/core/php/jeeCron.php" > cronjeedom
	sudo mv cronjeedom /etc/cron.d/${app}
	sudo chown root /etc/cron.d/${app}
	
# Access to API without SSO
	ynh_app_setting_set "$app" unprotected_uris "/core/api/jeeApi.php"
	
# Configure LDAP and the Admin User and access settings
	sudo sed -i "s@YNH_DOMAIN@$domain@g" ../conf/config.sql
	sudo sed -i "s@YNH_PATH@$path@g" ../conf/config.sql
	sudo sed -i "s@YNH_ADMIN@$admin@g" ../conf/config.sql
	mysql -u $dbuser -p$dbpass $dbname < ../conf/config.sql
	
# OpenZWave dependencies
	if [ "$zwave" = "Yes" ]; then
		wget https://raw.githubusercontent.com/jeedom/plugin-openzwave/master/resources/install.sh
		chmod +x install.sh
		sudo bash install.sh
	fi
	
# Restart services
	sudo service php5-fpm restart || true
	sudo service nginx reload || true

# Trap
	function exit_properly
	{
		set +e
		# Remove files
			sudo rm -rf "/var/www/${app}"
			sudo rm -f "/etc/cron.d/${app}"
			sudo rm -f "/etc/nginx/conf.d/${domain}.d/${app}.conf"
		# Remove DB
			ynh_mysql_drop_db "$dbname" 2>/dev/null || true
			ynh_mysql_drop_user "$dbuser" 2>/dev/null || true
		# Remove www-data sudoer
		if [ $(sudo grep "www-data ALL=(ALL) NOPASSWD: ALL" /etc/sudoers | wc -l) -eq 0 ];then
			sudo sed -i "/www-data ALL=(ALL) NOPASSWD: ALL/d" /etc/sudoers
		fi
		# Reload
			sudo service php5-fpm restart || true
			sudo service nginx reload || true
		exit 1
	}
	trap exit_properly ERR
